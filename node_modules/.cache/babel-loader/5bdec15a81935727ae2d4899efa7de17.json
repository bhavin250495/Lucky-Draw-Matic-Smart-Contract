{"ast":null,"code":"var _jsxFileName = \"/Volumes/Developer/Blockchain/lottery-react-app/lottery-react/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport React, { Component } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      manger: '',\n      players: [],\n      balance: '',\n      value: '',\n      message: ''\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      this.setState({\n        result: true\n      });\n      this.setState({\n        value: ''\n      });\n      this.setState({\n        message: 'Congrats you have been entered!'\n      });\n    };\n\n    this.onClick = async event => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.pickWinner().send({\n        from: accounts[0]\n      });\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      this.setState({\n        balance: balance\n      });\n      this.distribute(); // console.log(await lottery.methods.getWinners().call());\n\n      this.setState({\n        message: 'Winner has been picked'\n      });\n    };\n  }\n\n  // refreshManager = async () => { \n  // }\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const metaMaskAccounts = await web3.eth.getAccounts();\n    this.setState({\n      manager,\n      players,\n      balance,\n      metaMaskAccounts\n    });\n  }\n\n  async distribute() {\n    const accounts = await web3.eth.getAccounts();\n    const winners = await lottery.methods.getWinners().call();\n    const firstPrice = 4 / 9 * this.state.balance;\n    const secondPrice = 3 / 9 * this.state.balance;\n    const thirdPrice = 2 / 10 * this.state.balance; //const we = web3.utils.toBN(firstPrice)\n\n    await lottery.methods.distributeReward([firstPrice.toString(), secondPrice.toString(), thirdPrice.toString()]).send({\n      from: accounts[0]\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state.result);\n\n    if (this.state.result) {\n      this.setState({\n        result: false\n      });\n      const manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      this.setState({\n        manager,\n        players,\n        balance\n      });\n    }\n\n    return true;\n  }\n\n  render() {\n    //web3.eth.getAccounts().then(console.log);\n    let playerList = '';\n    this.state.players.map((item, position) => {\n      return playerList += item + (position < this.state.players.length - 1 ? ', ' : '');\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Lottery Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This contract is managed by \", this.state.manager, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), \"There are currently \", this.state.players.length, \" people entered,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), \" with address \", playerList, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), \"competing to win \", web3.utils.fromWei(this.state.balance, 'ether'), \" Ether! \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Want to try your luck?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            placeholder: \"Matic > 0.01\",\n            value: this.state.value,\n            onChange: event => this.setState({\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Wager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), this.state.metaMaskAccounts && this.state.manager === this.state.metaMaskAccounts[0] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ready to pick winner?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClick,\n          children: \"Pick a winner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Developer/Blockchain/lottery-react-app/lottery-react/src/App.js"],"names":["web3","lottery","React","Component","App","state","manger","players","balance","value","message","onSubmit","event","preventDefault","accounts","eth","getAccounts","setState","methods","enter","send","from","utils","toWei","result","onClick","pickWinner","getBalance","options","address","distribute","componentDidMount","manager","call","getPlayers","metaMaskAccounts","winners","getWinners","firstPrice","secondPrice","thirdPrice","distributeReward","toString","shouldComponentUpdate","nextProps","nextState","console","log","render","playerList","map","item","position","length","fromWei","target"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport React, { Component } from 'react'\nimport \"./styles.css\"; \n\nclass App extends Component {\n\n  state = {\n    manger: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: ''\n  };\n\n  // refreshManager = async () => { \n\n\n  // }\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const metaMaskAccounts = await web3.eth.getAccounts();\n    this.setState({ manager, players, balance, metaMaskAccounts });\n  }\n\n  async distribute() {\n    const accounts = await web3.eth.getAccounts();\n    const winners = await lottery.methods.getWinners().call();\n    const firstPrice =  4 / 9 * this.state.balance;\n    const secondPrice = 3 / 9 * this.state.balance;\n    const thirdPrice = 2 / 10 * this.state.balance;\n    //const we = web3.utils.toBN(firstPrice)\n    await lottery.methods.distributeReward([firstPrice.toString(),secondPrice.toString(),thirdPrice.toString()]).send({ from: accounts[0] }) ;\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state.result);\n    if (this.state.result) {\n\n      this.setState({ result: false });\n      const manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      this.setState({ manager, players, balance });\n    }\n    return true;\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ message: 'Waiting on transaction success...' });\n    await lottery.methods.enter().send({\n\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n\n    });\n    this.setState({ result: true });\n    this.setState({ value: '' });\n    this.setState({ message: 'Congrats you have been entered!' });\n\n  }\n\n\n  onClick = async (event) => {\n\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ message: 'Waiting on transaction success...' });\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    });\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({ balance: balance });\n    this.distribute();\n    // console.log(await lottery.methods.getWinners().call());\n    this.setState({ message: 'Winner has been picked' });\n  }\n\n\n  render() {\n    //web3.eth.getAccounts().then(console.log);\n    let playerList = ''\n    this.state.players.map((item, position) => {\n      return playerList += item + (position < this.state.players.length - 1 ? ', ' : '');\n    })\n    return (\n      <div className=\"container\">\n        <h2> Lottery Contract </h2>\n        <p>This contract is managed by {this.state.manager}\n          <br />There are currently {this.state.players.length} people entered,\n          <br /> with address {playerList}\n          <br />competing to win {web3.utils.fromWei(this.state.balance, 'ether')} Ether! </p>\n\n        <hr />\n\n        <form onSubmit={this.onSubmit}>\n\n          <h4>Want to try your luck?</h4>\n          <div>\n            <input required\n            type=\"text\"\n            placeholder=\"Matic > 0.01\"\n              value={this.state.value}\n              onChange={event => this.setState({ value: event.target.value })}\n\n            />\n            <input type=\"submit\" value=\"Wager\"/>\n            \n          </div>\n        </form>\n        <hr />\n        {this.state.metaMaskAccounts && this.state.manager === this.state.metaMaskAccounts[0] &&\n          <>\n\n            <h4>Ready to pick winner?</h4>\n            <button onClick={this.onClick}>Pick a winner</button>\n\n          </>}\n        <h1>{this.state.message}</h1>\n      </div>\n\n\n    );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}