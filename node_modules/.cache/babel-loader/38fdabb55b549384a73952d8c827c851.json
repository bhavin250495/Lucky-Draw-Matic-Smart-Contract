{"ast":null,"code":"var _jsxFileName = \"/Volumes/Developer/Blockchain/lottery-react-app/lottery-react/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      manger: '',\n      players: [],\n      balance: '',\n      value: '',\n      message: ''\n    };\n\n    this.onSubmit = async event => {\n      this.setState({\n        result: false\n      });\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      this.setState({\n        result: true\n      });\n      this.setState({\n        message: 'Congrats you have been entered!'\n      });\n    };\n\n    this.onClick = async event => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.pickWinner().send({\n        from: accounts[0]\n      });\n      this.setState({\n        message: 'Winner has been picked'\n      });\n    };\n  }\n\n  // refreshManager = async () => { \n  // }\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({\n      manager,\n      players,\n      balance\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state.result);\n\n    if (this.state.result) {\n      console.log('updated');\n      this.setState({\n        result: false\n      });\n      const manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      this.setState({\n        manager,\n        players,\n        balance\n      });\n    }\n\n    return true;\n  }\n\n  render() {\n    web3.eth.getAccounts().then(console.log);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Lottery Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This contract is managed by \", this.state.manager, \". There are currently \", this.state.players, \" people entered, competing to win \", web3.utils.fromWei(this.state.balance, 'ether'), \" ether! \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Want to try your luck?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Amount of ether to enter \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.value,\n            onChange: event => this.setState({\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ready to pick winner?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onClick,\n        children: \"Pick a winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 2\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Developer/Blockchain/lottery-react-app/lottery-react/src/App.js"],"names":["web3","lottery","React","Component","App","state","manger","players","balance","value","message","onSubmit","event","setState","result","preventDefault","accounts","eth","getAccounts","methods","enter","send","from","utils","toWei","onClick","pickWinner","componentDidMount","manager","call","getPlayers","getBalance","options","address","shouldComponentUpdate","nextProps","nextState","console","log","render","then","fromWei","target"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport React, { Component } from 'react'\n\nclass App extends Component {\n\nstate = {\n  manger:'',\n  players: [],\n  balance: '',\n  value: '',\n  message:''\n};\n\n// refreshManager = async () => { \n\n  \n// }\n\n   async componentDidMount() {\n     const manager  = await lottery.methods.manager().call();\n     const players = await lottery.methods.getPlayers().call();\n     const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({manager, players, balance });\n   }\n\n\n\n   async shouldComponentUpdate(nextProps,nextState) {\n    console.log(this.state.result);\nif (this.state.result) {\nconsole.log('updated')\nthis.setState({result: false});\nconst manager  = await lottery.methods.manager().call();\n     const players = await lottery.methods.getPlayers().call();\n     const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({manager, players, balance });\n}\nreturn true;\n   }\n\n   onSubmit = async (event) => {\n    this.setState({result: false});\n    event.preventDefault();\n    const accounts = await web3.eth.getAccounts();\n    this.setState({message:'Waiting on transaction success...'});\n    await lottery.methods.enter().send({\n\nfrom: accounts[0],\nvalue: web3.utils.toWei(this.state.value,'ether')\n\n    });\nthis.setState({result: true});\nthis.setState({message:'Congrats you have been entered!'});\n\n   }\n\n\nonClick = async (event) => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({message:'Waiting on transaction success...'});\n      await lottery.methods.pickWinner().send({\n        from:accounts[0]\n      });\n      this.setState({message:'Winner has been picked'});\n    }\n\n\n   render() {\n    web3.eth.getAccounts().then(console.log);\n\n  return (\n <div> \n<h2> Lottery Contract </h2>\n<p>This contract is managed by {this.state.manager}.\nThere are currently {this.state.players} people entered,\ncompeting to win {web3.utils.fromWei(this.state.balance,'ether') } ether! </p>\n\n\n<hr/> \n\n<form onSubmit={this.onSubmit}>\n\n<h4>Want to try your luck?</h4>\n<div>\n<label> Amount of ether to enter </label>\n<input \nvalue = {this.state.value}\nonChange={event=> this.setState({value: event.target.value})}\n\n/>\n<button>Enter</button>\n</div>\n</form>\n<hr/>\n\n<h4>Ready to pick winner?</h4>\n<button onClick={this.onClick}>Pick a winner</button>\n\n\n<h1>{this.state.message}</h1>\n </div>\n\n\n   );\n\n   }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}