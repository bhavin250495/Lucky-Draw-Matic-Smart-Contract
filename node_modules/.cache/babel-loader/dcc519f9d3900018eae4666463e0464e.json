{"ast":null,"code":"var _jsxFileName = \"/Volumes/Developer/Blockchain/lottery-react-app/lottery-react/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      manger: '',\n      players: [],\n      balance: '',\n      value: '',\n      message: ''\n    };\n\n    this.distribute = () => {\n      const firstPrice = 4 / 9 * this.state.balance;\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      this.setState({\n        result: true\n      });\n      this.setState({\n        value: ''\n      });\n      this.setState({\n        message: 'Congrats you have been entered!'\n      });\n    };\n\n    this.onClick = async event => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.pickWinner().send({\n        from: accounts[0]\n      });\n      const winners = await lottery.methods.getWinners();\n      console.log(\"respomse\");\n      console.log(winners);\n      this.setState({\n        message: 'Winner has been picked'\n      });\n    };\n  }\n\n  // refreshManager = async () => { \n  // }\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const metaMaskAccounts = await web3.eth.getAccounts();\n    this.setState({\n      manager,\n      players,\n      balance,\n      metaMaskAccounts\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state.result);\n\n    if (this.state.result) {\n      this.setState({\n        result: false\n      });\n      const manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      this.setState({\n        manager,\n        players,\n        balance\n      });\n    }\n\n    return true;\n  }\n\n  render() {\n    //web3.eth.getAccounts().then(console.log);\n    let playerList = '';\n    this.state.players.map((item, position) => {\n      return playerList += item + (position < this.state.players.length - 1 ? ', ' : '');\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Lottery Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This contract is managed by \", this.state.manager, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 4\n        }, this), \"There are currently \", this.state.players.length, \" people entered,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 4\n        }, this), \" with address \", playerList, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 4\n        }, this), \"competing to win \", web3.utils.fromWei(this.state.balance, 'ether'), \" Ether! \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Want to try your luck?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Amount of ether to enter \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.value,\n            onChange: event => this.setState({\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }, this), this.state.metaMaskAccounts && this.state.manager === this.state.metaMaskAccounts[0] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ready to pick winner?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClick,\n          children: \"Pick a winner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Developer/Blockchain/lottery-react-app/lottery-react/src/App.js"],"names":["web3","lottery","React","Component","App","state","manger","players","balance","value","message","distribute","firstPrice","onSubmit","event","preventDefault","accounts","eth","getAccounts","setState","methods","enter","send","from","utils","toWei","result","onClick","pickWinner","winners","getWinners","console","log","componentDidMount","manager","call","getPlayers","getBalance","options","address","metaMaskAccounts","shouldComponentUpdate","nextProps","nextState","render","playerList","map","item","position","length","fromWei","target"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport React, { Component } from 'react'\n\nclass App extends Component {\n\n  state = {\n    manger:'',\n    players: [],\n    balance: '',\n    value: '',\n    message:''\n  };\n\n// refreshManager = async () => { \n\n\n// }\n\nasync componentDidMount() {\n const manager  = await lottery.methods.manager().call();\n const players = await lottery.methods.getPlayers().call();\n const balance = await web3.eth.getBalance(lottery.options.address);\n const metaMaskAccounts = await web3.eth.getAccounts();\n this.setState({manager, players, balance, metaMaskAccounts});\n}\n\ndistribute = () => {\nconst firstPrice = 4/9 * this.state.balance\n}\n\nasync shouldComponentUpdate(nextProps,nextState) {\n  console.log(this.state.result);\n  if (this.state.result) {\n\n    this.setState({result: false});\n    const manager  = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({manager, players, balance });\n  }\n  return true;\n}\n\nonSubmit = async (event) => {\n  event.preventDefault();\n  const accounts = await web3.eth.getAccounts();\n  this.setState({message:'Waiting on transaction success...'});\n  await lottery.methods.enter().send({\n\n    from: accounts[0],\n    value: web3.utils.toWei(this.state.value,'ether')\n\n  });\n  this.setState({result: true});\n  this.setState({value:''});\n  this.setState({message:'Congrats you have been entered!'});\n\n}\n\n\nonClick = async (event) => {\n  const accounts = await web3.eth.getAccounts();\n  this.setState({message:'Waiting on transaction success...'});\n  await lottery.methods.pickWinner().send({\n    from:accounts[0]\n  });\n  const winners = await lottery.methods.getWinners();\n  console.log(\"respomse\");\n  console.log(winners);\n  this.setState({message:'Winner has been picked'});\n}\n\n\nrender() {\n  //web3.eth.getAccounts().then(console.log);\n  let playerList = ''\n  this.state.players.map((item,position) => {\n    return playerList+= item + (position<this.state.players.length-1 ? ', ' : '');\n  })\n  return (\n   <div> \n   <h2> Lottery Contract </h2>\n   <p>This contract is managed by {this.state.manager}\n   <br/>There are currently { this.state.players.length } people entered,\n   <br/> with address {playerList}\n   <br/>competing to win {web3.utils.fromWei(this.state.balance,'ether') } Ether! </p>\n\n   <hr/> \n\n   <form onSubmit={this.onSubmit}>\n\n   <h4>Want to try your luck?</h4>\n   <div>\n   <label> Amount of ether to enter </label>\n   <input \n   value = {this.state.value}\n   onChange={event=> this.setState({value: event.target.value})}\n\n   />\n   <button>Enter</button>\n   </div>\n   </form>\n   <hr/>\n   {this.state.metaMaskAccounts && this.state.manager === this.state.metaMaskAccounts[0] &&  \n    <>\n\n    <h4>Ready to pick winner?</h4>\n    <button onClick={this.onClick}>Pick a winner</button>\n\n    </>}\n    <h1>{this.state.message}</h1>\n    </div>\n\n\n    );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}